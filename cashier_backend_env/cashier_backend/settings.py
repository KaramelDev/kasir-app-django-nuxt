"""
Django settings for cashier_backend project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-!%z1-kl=ip**=6u&hymn%cju-bdsxw8vm7fi60%$dp%ev@prie'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework.authtoken', 
    'rest_framework',
    'corsheaders', # Tambahkan ini
    'products',    # Akan kita buat nanti
    'orders',      
]
# Konfigurasi CORS (sesuaikan dengan URL frontend Anda)
# cashier_backend/cashier_backend/settings.py

# ...

CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000", # Ini adalah URL default Nuxt.js development server
    # Jika frontend Anda berjalan di port lain atau domain lain, tambahkan di sini
    # Contoh: "http://127.0.0.1:3000",
    # Contoh jika Anda deploy frontend: "https://your-frontend-app.com",
]

# --- PENTING: Jangan gunakan CORS_ALLOW_ALL_ORIGINS = True di produksi ---
# Jika Anda ingin mengizinkan SEMUA origin (untuk development SANGAT CEPAT, tapi tidak aman untuk produksi)
# Anda bisa menggunakan:
# CORS_ALLOW_ALL_ORIGINS = True
# Jika CORS_ALLOW_ALL_ORIGINS = True, maka CORS_ALLOWED_ORIGINS diabaikan.
# Selalu gunakan CORS_ALLOWED_ORIGINS untuk keamanan yang lebih baik di lingkungan selain development.

# Konfigurasi tambahan (biasanya sudah default yang baik)
CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'POST',
    'PUT',
]

CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization', # Penting untuk token authentication
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware', # Pastikan ini di atas CommonMiddleware
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication', # Menggunakan Token Authentication
        # 'rest_framework.authentication.SessionAuthentication', # Opsional: jika ingin juga menggunakan sesi
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated', # Contoh: Semua API butuh autentikasi secara default
        # Anda bisa mengubah ini menjadi 'rest_framework.permissions.AllowAny'
        # dan menerapkan IsAuthenticated pada viewset tertentu.
    ]
}

ROOT_URLCONF = 'cashier_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')




WSGI_APPLICATION = 'cashier_backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
